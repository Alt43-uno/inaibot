import telebot
import config
import random
import time

from telebot import types

bot = telebot.TeleBot(config.TOKEN)
scheduleLasts = {}
scheduleLimit = 30

users = []
with open('users.txt', 'r') as f:
	for i in f:
		users.append(i.replace('\n', ''))
print(users)

@bot.message_handler(commands=['start'])
def welcome(message):
	if message.chat.type == 'private':
		if str(message.chat.id) not in users:
			users.append(message.chat.id)
			with open('users.txt', 'a') as f:
				f.write(str(message.chat.id)+'\n')
				print('+ —é–∑–µ—Ä–∏–æ',message.chat.id)
		sti = open('static/sticker.webp', 'rb')
		bot.send_sticker(message.chat.id, sti)


		markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		item1 = types.KeyboardButton("üóì –£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
		item2 = types.KeyboardButton("üíé –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é")
		item3 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")

		markup.add(item1,item2,item3)

		bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–≠—Ç–æ - <b>{1.first_name}</b>, –±–æ—Ç –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è INAI.kg! ".format(message.from_user, bot.get_me()),
			parse_mode='html', reply_markup=markup)

@bot.message_handler(commands=['emodel'])
def emodel(message):
	if str(message.chat.id) == str(config.adminID):
		with open('emotions.txt', 'w') as f:
			f.write(str(0) + '\n' + str(0) + '\n' + str(0) + '\n')
		bot.send_message(message.chat.id, "–¢—ã –æ—á–∏—Å—Ç–∏–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!",
			parse_mode='html')

@bot.message_handler(commands=['send'])
def sender(message):
	if str(message.chat.id) == str(config.adminID):
		for i in users:
			bot.send_message(int(i), message.text[6:], parse_mode='html')

@bot.message_handler(commands=['schedule'])
def schedule(message):
	currentChatId = str(message.chat.id)
	try:
		last_used = scheduleLasts[currentChatId]
	except:
		last_used = 1
	if int(time.time()) - last_used > scheduleLimit:
		markup = types.InlineKeyboardMarkup(row_width=2)
		item1 = types.InlineKeyboardButton("‚ö™Ô∏è AIN-1-21 ‚ö™Ô∏è", callback_data='ain121')
		item2 = types.InlineKeyboardButton("üîµ AIN-2-21 üîµ", callback_data='ain221')
		item3 = types.InlineKeyboardButton("üü£ AIN-3-21 üü£", callback_data='ain321')
		item4 = types.InlineKeyboardButton("üî¥ MIN-1-21 üî¥", callback_data='min121')
		item5 = types.InlineKeyboardButton("üü† WIN-1-21 üü†", callback_data='win121')
		markup.add(item1, item2, item3, item4, item5,)
		bot.send_message(message.chat.id, '–ò–∑ –∫–∞–∫–æ–π –≤—ã –≥—Ä—É–ø–ø—ã?', reply_markup=markup)
		last_used = int(time.time())
		scheduleLasts[currentChatId] = last_used
	else:
		markup = types.InlineKeyboardMarkup(row_width=2)
		item1 = types.InlineKeyboardButton("–û–ö", callback_data='remove')
		markup.add(item1)
		bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑ —á–µ—Ä–µ–∑ {0} —Å–µ–∫—É–Ω–¥.'.format(scheduleLimit - (int(time.time()) - last_used)), reply_markup=markup)

@bot.message_handler(content_types=['text'])
def main(message):
	if message.chat.type == 'private':
		if message.text == 'üóì –£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':

			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton("‚ö™Ô∏è AIN-1-21 ‚ö™Ô∏è", callback_data='ain121')
			item2 = types.InlineKeyboardButton("üîµ AIN-2-21 üîµ", callback_data='ain221')
			item3 = types.InlineKeyboardButton("üü£ AIN-3-21 üü£", callback_data='ain321')
			item4 = types.InlineKeyboardButton("üî¥ MIN-1-21 üî¥", callback_data='min121')
			item5 = types.InlineKeyboardButton("üü† WIN-1-21 üü†", callback_data='win121')
			markup.add(item1, item2, item3, item4, item5,)

			bot.send_message(message.chat.id, '–ò–∑ –∫–∞–∫–æ–π –≤—ã –≥—Ä—É–ø–ø—ã?', reply_markup=markup)
		elif message.text == 'üíé –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é':
			bot.send_message(message.chat.id, '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–∞–∫—É—é –ª–∏–±–æ —Ñ–∏—á—É –º–æ–∂–Ω–æ —Å—é–¥–∞: @i_4m_robot')
		elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':
			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton("üòÅ –û—Ç–ª–∏—á–Ω–æ", callback_data='good')
			item2 = types.InlineKeyboardButton("üòê –ù–æ—Ä–º", callback_data='norm')
			item3 = types.InlineKeyboardButton("üòî –¢–∞–∫–æ–µ —Å–µ–±–µ", callback_data='bad')
			markup.add(item1, item2, item3)

			bot.send_message(message.chat.id, '–£ –º–µ–Ω—è —Ö–æ—Ä–æ—à–æ, –∞ —É —Ç–µ–±—è?', reply_markup=markup)
		else:
			bot.send_message(message.chat.id, '–í–æ–∑–º–æ–∂–Ω–æ —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã —É–∂–µ –Ω–µ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ /start')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'norm':
				goodEmotions = 0
				normEmotions = 0
				badEmotions = 0
				with open('emotions.txt', 'r') as f:
					mass = []
					for i in f:
						mass.append(int(i))
					goodEmotions = int(mass[0])
					normEmotions = int(mass[1])
					badEmotions = int(mass[2])
				normEmotions += 1
				with open('emotions.txt', 'w') as f:
					f.write(str(goodEmotions) + '\n' + str(normEmotions) + '\n' + str(badEmotions) + '\n')
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='backemo')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='*–ù–∞–¥–µ—é—Å—å –æ–Ω–æ —É–ª—É—á—à–∏—Ç—Å—è!*\n\n'+'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n'+'–° —Ö–æ—Ä–æ—à–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(goodEmotions)+'\n'+'–° –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(normEmotions)+'\n'+'–° –ø–ª–æ—Ö–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(badEmotions) +'\n', reply_markup=markup, parse_mode='Markdown')
			elif call.data == 'bad':
				goodEmotions = 0
				normEmotions = 0
				badEmotions = 0
				with open('emotions.txt', 'r') as f:
					mass = []
					for i in f:
						mass.append(int(i))
					goodEmotions = int(mass[0])
					normEmotions = int(mass[1])
					badEmotions = int(mass[2])
				badEmotions += 1
				with open('emotions.txt', 'w') as f:
					f.write(str(goodEmotions) + '\n' + str(normEmotions) + '\n' + str(badEmotions) + '\n')
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='backemo')
				markup.add(item1) 
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='*–ù–ï –ì–†–£–°–¢–ò!*\n\n'+'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n'+'–° —Ö–æ—Ä–æ—à–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(goodEmotions)+'\n'+'–° –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(normEmotions)+'\n'+'–° –ø–ª–æ—Ö–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(badEmotions) +'\n', reply_markup=markup, parse_mode='Markdown')
			
			elif call.data == 'good':
				goodEmotions = 0
				normEmotions = 0
				badEmotions = 0
				with open('emotions.txt', 'r') as f:
					mass = []
					for i in f:
						mass.append(int(i))
					goodEmotions = int(mass[0])
					normEmotions = int(mass[1])
					badEmotions = int(mass[2])
				goodEmotions += 1
				with open('emotions.txt', 'w') as f:
					f.write(str(goodEmotions) + '\n' + str(normEmotions) + '\n' + str(badEmotions) + '\n')

				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='backemo')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='*–≠—Ç–æ –∑–¥–æ—Ä–æ–≤–æ!*\n\n'+'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n'+'–° —Ö–æ—Ä–æ—à–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(goodEmotions)+'\n'+'–° –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(normEmotions)+'\n'+'–° –ø–ª–æ—Ö–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: '+str(badEmotions) +'\n', reply_markup=markup, parse_mode='Markdown')

			elif call.data == 'ain121':
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='back')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='''
‚ö™Ô∏è AIN-1-21 ‚ö™Ô∏è
--------------				
*–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:*

8:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
9:30 - –ê–°–î
11:00 - –í–ß–ö

*–í—Ç–æ—Ä–Ω–∏–∫:*

8:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
9:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
11:00 - –ê–°–î
12:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞

*–°—Ä–µ–¥–∞:*

9:30 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
11:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–ß–µ—Ç–≤–µ—Ä–≥:*

8:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
9:30 - –í–ß–ö

*–ü—è—Ç–Ω–∏—Ü–∞:*

8:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
9:30 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
11:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–°—É–±–±–æ—Ç–∞:*

8:00 - –í–ß–ö
9:30 - –ê–°–î
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
12:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
--------------
‚ö™Ô∏è AIN-1-21 ‚ö™Ô∏è''', reply_markup=markup, parse_mode='Markdown')
			elif call.data == 'ain221':
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='back')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='''

üîµ AIN-2-21 üîµ
--------------
*–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:*

8:00 - –ê–°–î
9:30 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
11:00 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞

*–í—Ç–æ—Ä–Ω–∏–∫:*

8:00 - –í–ß–ö
9:30 - –ê–°–î
11:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫

*–°—Ä–µ–¥–∞:*

8:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
9:30 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
11:00 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞

*–ß–µ—Ç–≤–µ—Ä–≥:*

9:30 - –í–ß–ö
11:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫

*–ü—è—Ç–Ω–∏—Ü–∞:*

8:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
9:30 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
11:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫

*–°—É–±–±–æ—Ç–∞:*

8:00 - –í–ß–ö
9:30 - –ê–°–î
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
12:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
--------------
üîµ AIN-2-21 üîµ''', reply_markup=markup, parse_mode='Markdown')
			elif call.data == 'ain321':
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='back')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='''
üü£ AIN-3-21 üü£
--------------
*–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:*

8:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
9:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
11:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–í—Ç–æ—Ä–Ω–∏–∫:*

8:00 - –ê–°–î
9:30 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
11:00 - –í–ß–ö

*–°—Ä–µ–¥–∞:*

9:30 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
11:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
12:30 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–ß–µ—Ç–≤–µ—Ä–≥:*

8:00 - –í–ß–ö
9:30 - –ê–°–î

*–ü—è—Ç–Ω–∏—Ü–∞:*

8:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
9:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è

*–°—É–±–±–æ—Ç–∞:*

8:00 - –í–ß–ö
9:30 - –ê–°–î
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
12:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
--------------
üü£ AIN-3-21 üü£''', reply_markup=markup, parse_mode='Markdown')

			elif call.data == 'min121':
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='back')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='''
üî¥ MIN-1-21 üî¥
--------------
*–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:*

8:00 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
9:30 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
11:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫

*–í—Ç–æ—Ä–Ω–∏–∫:*

8:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
9:30 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
11:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–°—Ä–µ–¥–∞:*

8:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
9:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
11:00 - –í–ß–ö
12:30 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è

*–ß–µ—Ç–≤–µ—Ä–≥:*

8:00 - –ê–°–î
9:30 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–ü—è—Ç–Ω–∏—Ü–∞:*

9:30 - –í–ß–ö
11:00 - –ê–°–î

*–°—É–±–±–æ—Ç–∞:*

8:00 - –í–ß–ö
9:30 - –ê–°–î
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
12:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
--------------
üî¥ MIN-1-21 üî¥''', reply_markup=markup, parse_mode='Markdown')
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='back')
				markup.add(item1)
			elif call.data == 'win121':
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data='back')
				markup.add(item1)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='''
üü† WIN-1-21 üü†
--------------
*–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:*

9:30 - –í–ß–ö
11:00 - –ê–°–î

*–í—Ç–æ—Ä–Ω–∏–∫:*

8:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
9:30 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è

*–°—Ä–µ–¥–∞:*

8:00 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
9:30 - –ê–°–î
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è

*–ß–µ—Ç–≤–µ—Ä–≥:*

8:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
9:30 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
11:00 - –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫

*–ü—è—Ç–Ω–∏—Ü–∞:*

8:00 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
9:30 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
11:00 - –í–ß–ö

*–°—É–±–±–æ—Ç–∞:*

8:00 - –í–ß–ö
9:30 - –ê–°–î
11:00 - –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
12:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
--------------
üü† WIN-1-21 üü†''', reply_markup=markup, parse_mode='Markdown')
			elif call.data == 'back':
				markup = types.InlineKeyboardMarkup(row_width=2)
				item1 = types.InlineKeyboardButton("‚ö™Ô∏è AIN-1-21 ‚ö™Ô∏è", callback_data='ain121')
				item2 = types.InlineKeyboardButton("üîµ AIN-2-21 üîµ", callback_data='ain221')
				item3 = types.InlineKeyboardButton("üü£ AIN-3-21 üü£", callback_data='ain321')
				item4 = types.InlineKeyboardButton("üî¥ MIN-1-21 üî¥", callback_data='min121')
				item5 = types.InlineKeyboardButton("üü† WIN-1-21 üü†", callback_data='win121')
				markup.add(item1, item2, item3, item4, item5,)
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ò–∑ –∫–∞–∫–æ–π —Ç—ã –≥—Ä—É–ø–ø—ã?", reply_markup=markup)
			elif call.data == 'backemo':
				
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü—Ä–∏–≤–µ—Ç!\n–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–æ –∏–∑ –º–µ–Ω—é:", reply_markup=None)
			
			elif call.data == 'remove':
				bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	except Exception as e:
		print('–∑–∞—â–∏—Ç–∞ –Ω–∞—Ö–æ–π', e)

bot.polling(none_stop=True)